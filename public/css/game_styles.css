*, *::after, *::before {
  box-sizing: border-box;
  font-family: Arial;
}

body {
  background-color: hsl(240, 5%, 10%);
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  padding: 1em;
  font-size: clamp(.5rem, 2.5vmin, 1.5rem);
}

.replay {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1em;
  color: white;
  padding: .5em;
  border-radius: .25em;
  background-color: gray;
  cursor: pointer;
}

.keyboard {
  display: grid;
  grid-template-columns: repeat(20, minmax(auto, 1.25em));
  grid-auto-rows: 3em;
  gap: .25em;
  justify-content: center;
}

.key {
  font-size: inherit;
  grid-column: span 2;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: hsl(
    var(--hue, 200),
    var(--saturation, 1%),
    calc(var(--lightness-offset, 0%) + var(--lightness, 50%))
  );
  color: white;
  fill: white;
  text-transform: uppercase;
  border-radius: .25em;
  cursor: pointer;
  user-select: none;
}

.key.large {
  grid-column: span 3;
}

.key > svg {
  width: 1.75em;
  height: 1.75em;
}

.key:hover, .key:focus {
  --lightness-offset: 10%;
}

.key.wrong {
  --lightness: 25%;
}

.key.wrong-spot {
  --hue: 49;
  --saturation: 50%;
  --lightness: 50%;
}

.key.correct {
  --hue: 115;
  --saturation: 30%;
  --lightness: 45%;
}

.guess-matrix {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;
  grid-template-columns: repeat(6, 4em);
  grid-template-rows: repeat(6, 4em);
  gap: .25em;
  margin-bottom: 1em;
}

.block {
  font-size: 2em;
  color: white;
  border: .05em solid hsl(240, 5%, 25%);
  text-transform: uppercase;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  transition: transform 250ms linear;
}

.block[data-state="active"] {
  border-color: hsl(200, 1%, 40%);
}

.block[data-state="wrong"] {
  border: none;
  background-color: hsl(240, 5%, 25%);
}

.block[data-state="wrong-spot"] {
  border: none;
  background-color: hsl(49, 50%, 50%);
}

.block[data-state="correct"] {
  border: none;
  background-color: hsl(120, 30%, 45%);
}

.block.shake {
  animation: shake 250ms ease-in-out;
}

.block.bounce {
  animation: bounce 500ms ease-in-out;
}

.block.spin {
  transform: rotateX(90deg);
}

@keyframes shake {
  10% {
    transform: translateX(-5%);
  }

  30% {
    transform: translateX(5%);
  }

  50% {
    transform: translateX(-7.5%);
  }
}

@keyframes bounce {
  20% {
    transform: translateY(-50%);
  }  
  50% {
    transform: translateY(-25%);
  }  
  100% {
    transform: translateY(0);
  }
}

.alert-box {
  position: fixed;
  top: 10vh;
  left: 50vw;
  transform: translateX(-50%);
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.alert {
  pointer-events: none;
  background-color: hsl(210, 10%, 90%);
  padding: .75em;
  border-radius: .25em;
  opacity: 1;
  transition: opacity 500ms ease-in-out;
  margin-bottom: .5em;
}

.alert:last-child {
  margin-bottom: 0;
}

.alert.hide {
  opacity: 0;
}